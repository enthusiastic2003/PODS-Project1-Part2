package com.sirjanhansda.pods.products.model;

import com.fasterxml.jackson.annotation.JsonBackReference;
import jakarta.persistence.*;
import lombok.Data;

/**
 * This class represents an item within an order.
 * It is annotated with @Entity, marking it as a JPA entity that will be mapped to a database table.
 * The class contains the following fields:
 * - id (Integer): The unique identifier for each order item, automatically generated with 
 *   @GeneratedValue using the IDENTITY strategy (auto-increment).
 * - order (Orders): A reference to the associated order. The @ManyToOne annotation indicates that 
 *   many order items can belong to a single order, and @JoinColumn specifies the foreign key column 
 *   that links to the Orders entity. The @JsonBackReference annotation prevents circular references 
 *   when serializing the object into JSON (it tells Jackson to ignore this field during serialization).
 * - product_id (Integer): The ID of the product for this order item.
 * - quantity (Integer): The quantity of the product in this order item.
 * 
 * The @Data annotation from Lombok automatically generates getter, setter, equals, hashcode, 
 * and toString methods for the class.
 */
@Entity
@Data
public class OrderItem {

    // Unique identifier for the order item (auto-generated by the database)
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer id;

    // Reference to the associated order (Many-to-One relationship)
    @ManyToOne
    @JoinColumn(name = "order_id")
    @JsonBackReference // Prevents circular references during JSON serialization
    private Orders order;

    // The ID of the product in the order item
    private Integer product_id;

    // The quantity of the product in the order item
    private Integer quantity;
}
